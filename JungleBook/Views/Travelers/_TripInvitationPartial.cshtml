@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model JungleBook.Models.ViewModels.TripViewModel

@{
    ViewData["Title"] = "SendInvitations";
}


<div class="container-fluid">
    @if (SignInManager.IsSignedIn(User))
    {
        <h5>Send Invitations</h5>
        <div class="row">
            <div class="col-md-auto">
                <form asp-action="SendInvitations" asp-controller="Travelers">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input type="hidden" asp-for="TravelerLoggedIn.TravelerId" />
                    <input type="hidden" asp-for="Trip.TripId" />
                    <input type="hidden" asp-for="Message.SenderAddress" />
                    <div class="form-group">
                        <label asp-for="Message.RecipientAddress" class="control-label"></label>
                        <input asp-for="Message.RecipientAddress" class="form-control" />
                        <span asp-validation-for="Message.RecipientAddress" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Message.MessageBody" class="control-label"></label>
                        <textarea asp-for="Message.MessageBody" class="form-control"></textarea>
                        <span asp-validation-for="Message.MessageBody" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <input type="submit" value="Send" class="btn btn-primary" />
                    </div>
                </form>
            </div>
        </div>
    }
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>